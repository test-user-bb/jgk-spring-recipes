#summary JPA
= Introduction =

 * JPA = Java Persistence API
== Annotations ==
 * @Entity
 * @Transient
== Collections supported ==
 * Collection
 * List
 * Set
 * Map
== Libraries/Dependencies ==
 * javax.persistence.Entity  org.hibernate:hibernate-jpa-2.0-api:3.5.6-Final
== Good to know ==
 * Runtime exceptions thrown by property accessor methods cause the current transaction to be rolled
back.
 * An instance becomes persistent by means of the EntityManager API.
 * Composite primary keys typically arise when mapping from legacy databases when the
database key is comprised of several columns. The EmbeddedId and IdClass annotations are used
to denote composite primary keys.
 * The primary key class must define equals and hashCode methods. The semantics of value
equality for these methods must be consistent with the database equality for the database types
to which the key is mapped.
 * Embeddable classes are not annotated as Entity. Embeddable classes must be annotated as
Embeddable or denoted in the XML descriptor as such.
== Resources ==
 * [http://jcp.org/aboutJava/communityprocess/final/jsr220/ JPA Spec - jsr-220]
 * [http://www.oracle.com/technetwork/java/javaee/downloads/index.html JPA Reference Implementation]
 * [http://en.wikipedia.org/wiki/Java_Persistence_API Wikipedia]