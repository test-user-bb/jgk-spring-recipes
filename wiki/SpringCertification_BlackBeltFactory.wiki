#summary Black Belt Factory - Spring 3 Certification Mock

= Spring 3 Certification Mock =

 * [http://www.blackbeltfactory.com/QuestionnaireDefDisplay.wwa?questPublicId=1712 Black Belt Factory]

== General  3 questions ==
 * Define Dependency Injection and Inversion of Control
 * List the advantages of Dependency Injection
 * Be able to write XML code for constructor injection
 * Be able to write XML code for setter injection
 * List the (non-web) scopes for beans
 * Identify the default scope for beans

== Lifecycle  4 questions ==
 * Use the init-method and destroy-method attributes in XML
 * Identify when singleton and prototype beans are instantiated
 * Know that {{{BeanPostProcessors}}} allow for custom modification of new bean instances, e.g. checking for marker interfaces or wrapping them with proxies.
 * Know that {{{BeanFactoryPostProcessors}}} for custom modification of an application context's bean definitions, adapting the bean property values of the context's underlying bean factory.
 * Know the container lifecycle sequence with respect to XML Parsing, {{{BeanFactoryPostProcessors}}}, {{{BeanPostProcessors}}}, validation, init method, {{{@PostConstruct}}}

== Annotations  4 questions ==
 * Know how to enable component scanning
 * Know how to turn on scanning for annotations such as {{{@Required}}} and {{{@PreDestroy}}}
 * Identify relationships between byType, byName and constructor autowiring
 * Use {{{@Autowired}}} for field, setter and constructor injection
 * Use {{{@Qualifier}}} with {{{@Autowired}}}
 * Define purpose of {{{@PostConstruct}}} and {{{@PreDestroy}}}

== Miscellaneous  4 questions ==
 * Write XML code to inject primitive/String values into a bean
 * Write XML code to inject List/Set/Map/Properties into a bean
 * Write XML code to inject null values into a bean
 * Identify the different {{{ApplicationContexts}}} along with the default resource prefix for each - classpath, file system, web
 * List all the resource prefixes that can be used when pointing to the XML configuration file when creating an Application Context.
 * Identify the correct way to point to a Spring configuration file within a package.
 * Use Property Placeholder to refer to external properties in the Spring XML configuration
 * Use abstract and parent properties for bean inheritance
 * Write code to use the p namespace
 * Differentiate between id and name attributes when creating a bean
 * Describe a scenario where {{{<aop:scoped-proxy />}}} is needed
