#summary jdbcTemplate

== {{{JdbcTemplate}}} 3 questions ==
=== State whether {{{JdbcTemplate}}} throws checked or unchecked exceptions ===
=== State whether you throw checked or unchecked exceptions in the callback methods ===
=== Know when to use {{{SimpleJdbcTemplate}}} and {{{JdbcTemplate}}} ===
=== Write code using {{{JdbcTemplate}}} to write select and update queries ===
=== Write code using {{{JdbcTemplate}}} to pass parameters to a query ===
=== Know when to use each of the following callbacks and write code using them: ===
 * {{{RowMapper}}}
  * Usage: get an object
{{{
Username username = jdbcTemplate.queryForObject(
 "select username, password, password_reminder, interim_name, person_id, user_type from username where username = ?",
 new Object[]{usernameName},
 new UsernameRowMapper()
);		
return username;

}}}
  * RowMapper
{{{
public class UsernameRowMapper implements RowMapper<Username> {

	@Override
    public Username mapRow(ResultSet rs, int rowNum) throws SQLException {
    	Username user = new Username();
        user.setUsername(rs.getString("username"));
        user.setPassword(rs.getString("password"));
        user.setPersonId(rs.getString("person_id"));
        user.setInterimName(rs.getString("interim_name"));
        user.setUserType(rs.getString("user_type"));
        user.setPasswordReminder(rs.getString("password_reminder"));
        return user;
    }

}
}}}
 * {{{RowCallbackHandler}}}
 * {{{ResultSetExtractor}}}